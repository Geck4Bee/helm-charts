apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "enterprisesearch.fullname" . }}
  labels: {{ include "enterprisesearch.labels" . | nindent 4 }}
  {{- if .Values.annotations }}
  annotations:
    {{- range $key, $value := .Values.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
{{ toYaml .Values.updateStrategy | indent 4 }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name | quote }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name | quote }}
        {{- range $key, $value := .Values.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      annotations:
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{/* This forces a restart if the configmap has changed */}}
        {{- if .Values.enterprisesearchConfig }}
        configchecksum: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum | trunc 63 }}
        {{- end }}
    spec:
{{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
{{- end }}
      securityContext:
{{ toYaml .Values.podSecurityContext | indent 8 }}
      {{- if .Values.serviceAccount }}
      serviceAccount: {{ .Values.serviceAccount }}
      {{- end }}
      {{- if .Values.hostAliases }}
      hostAliases: {{ toYaml .Values.hostAliases | nindent 6 }}
      {{- end }}
      volumes:
        - name: enterprisesearch-tokens
          emptyDir: {}
        - name: elasticsearch-certs
          secret:
            secretName: {{ .Values.elasticsearchCertificateSecret }}
        {{- if .Values.enterprisesearchConfig }}
        - name: enterprisesearchconfig
          configMap:
            name: {{ template "enterprisesearch.fullname" . }}-config
        {{- end }}
        {{- range .Values.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
        {{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8 }}
        {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
    {{- end }}
      containers:
      - name: enterprisesearch
        securityContext:
{{ toYaml .Values.securityContext | indent 10 }}
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        env:
          - name: secret_management.encryption_keys
            value: "[ba2df93d2b60e658af14d1ece8f57daf6e37a82f5b11ecfdef6d0bd1a1e61af2,ae49b4eaef4112837eb0f51434000d086cba21ecbcbc90903d9ae03f455c8903]"
          - name: allow_es_settings_modification
            value: "true"
          - name: elasticsearch.host
            value: "{{ .Values.elasticsearchHosts }}"
          - name: elasticsearch.username
            valueFrom:
              secretKeyRef:
                name: {{ .Values.elasticsearchCredentialSecret }}
                key: username
          - name: elasticsearch.password
            valueFrom:
              secretKeyRef:
                name: {{ .Values.elasticsearchCredentialSecret }}
                key: password
          - name: elasticsearch.ssl.enabled
            value: "true"
          - name: elasticsearch.ssl.certificate_authority
            value: "{{ template "enterprisesearch.home_dir" . }}/config/certs/{{ .Values.elasticsearchCertificateAuthoritiesFile }}"
          - name: elasticsearch.ssl.certificate
            value: "{{ template "enterprisesearch.home_dir" . }}/config/certs/tls.crt"
          - name: elasticsearch.ssl.key
            value: "{{ template "enterprisesearch.home_dir" . }}//config/certs/tls.key"
          - name: elasticsearch.ssl.verify
            value: "true"
          - name: kibana.host
            value: "{{ .Values.kibanaHosts }}"
          - name: kibana.external_url
            value: "{{ .Values.kibanaURL }}"
          - name: secret_management.enforce_valid_encryption_keys
            value: "false"
          - name: ent_search.ssl.enabled
            value: "true"
          - name: ent_search.ssl.keystore.path
            value: "{{ template "enterprisesearch.home.dir" . }}/keys/keystore.jks"
          - name: ent_search.ssl.keystore.password
            value: "changeme"
          - name: ent_search.ssl.keystore.key_password
            value: "Kajima157828!!!"
          - name: ent_search.external_url
            value: "{{ .Values.enterprisesearchHosts }}"
          - name: ent_search.listen_port
            value: "{{ .Values.enterprisesearchPort }}"
        ports:
          - containerPort: {{ .Values.httpPort }}
{{- if .Values.lifecycle }}
        lifecycle:
{{ toYaml .Values.lifecycle | indent 10 }}
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
          - name: elasticsearch-certs
            mountPath: {{ template "enterprisesearch.home_dir" . }}/config/certs
            readOnly: true
          - name: enterprisesearch-data
            mountPath: {{ template "enterprisesearch.home_dir" . }}/data
          - name: enterprisesearch-key
            mountPath: {{ template "enterprisesearch.home.dir" . }}/keys
            readOnly: true
      volumes:
        - name: elasticsearch-certs
          secret:
            secretName: {{ .Values.elasticsearchCertificateSecret }}
        - name: enterprisesearch-data
          emptyDir: {}
        - name: enterprisesearch-key
          persistentVolumeClaim:
            claimName: elastic-enterprisesearch-keys
